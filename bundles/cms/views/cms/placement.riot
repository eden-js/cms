<cms-placement>
  <div class={ `cms-placement placement-${props.placement.split('.').join('-')}` }>
    <div class="cms-placement-blocks" is="eden-blocks" data-placement={ props.placement } ref={ ref('blocks') } blocks={ getBlocks() } placement={ getPlacement() } on-save={ onSave } position={ props.placement } preview={ typeof props.preview !== 'undefined' ? props.preview && !eden.get('user.acl.validate')('admin') : !eden.get('user.acl.validate')('admin') } />
  </div>

  <script>
    // import base
    import Base from '../js/base';

    // cms placement
    export default class CmsPlacement extends Base {
      /**
      * on save placements
      *
      * @return {Model}
      */
      onSave(placement) {
        // get placements
        let placements = this.eden.get('placements') || {};

        // set placement
        placements[opts.placement] = placement.get();

        // set placements
        this.eden.set('placements', placements);
      }

      /**
      * on update name
      *
      * @param  {Event} e
      */
      onToggleUpdate(e) {
        // prevent default
        e.preventDefault();
        e.stopPropagation();

        // set update
        this.isUpdate = !this.isUpdate;

        // update
        this.update();
      }

      /**
      * add load blocks function
      *
      * @return {*}
      */
      loadBlocks() {
        // return internal proxied
        return this.refs.blocks.loadBlocks(...arguments);
      }

      /**
      * gets blocks
      *
      * @return {Array}
      */
      getBlocks() {
        // check for blocks
        return this.props.blocks || this.eden.get('blocks') || [];
      }

      /**
      * returns placement
      *
      * @return {Object}
      */
      getPlacement() {
        // return placement
        return (this.eden.get('placements') || {})[this.props.placement] ? this.eden.get('placements')[this.props.placement] : {
          'position' : this.props.placement
        };
      }
    }
  </script>
</cms-placement>
