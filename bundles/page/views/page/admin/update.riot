<page-admin-update-page>
  <admin-header title="{ page.get('id') ? 'Update' : 'Create' } Page { page.get('title.' + eden.get('i18n.lang')()) }" on-preview={ onPreview }>
    <div slot="right">

      <a href="/admin/page" class="btn btn-lg btn-primary">
        Back
      </a>

    </div>
  </admin-header>

  <div class="container-fluid">

    <div ref="form" class="admin-form" show={ !preview }>
      <div class="card mb-3">
        <div class="card-header">
          Page Information
        </div>
        <div class="card-header">
          <ul class="nav nav-tabs card-header-tabs">
            <li each={ (lng, i) in eden.get('i18n.lngs') } class="nav-item">
              <a class={ classes({ 'nav-link' : true, 'active' : eden.get('i18n.lang')() === lng }) } href="#!" data-lng={ lng } onclick={ onLanguage }>{ lng }</a>
            </li>
          </ul>
        </div>
        <div class="card-body">
          <div class="form-group">
            <label for="title">Page Title</label>
            <input type="text" id="title" name="title[{ lng }]" class="form-control" value={ (page.get('title') || {})[lng] || '' } data-input="title.{ lng }" hide={ eden.get('i18n.lang')() !== lng } each={ (lng, i) in eden.get('i18n.lngs') } onchange={ onSlug }>
          </div>
          <div class="form-group">
            <label for="slug">Page Slug</label>
            <input type="text" id="slug" name="slug" class="form-control" ref="slug" data-input="slug" value={ page.get('slug') } onchange={ onInput }>
          </div>
          <div class="form-group">
            <label for="layout">Page Layout</label>
            <input type="text" id="layout" name="layout" class="form-control" ref="layout" data-input="layout" value={ page.get('layout') } onchange={ onInput }>
          </div>
        </div>

      </div>
    </div>

    <div class="cms-placement-blocks" data-placement={ get('item.id') || 'page' } data-is="eden-blocks" placement={ page.get('placement') || {} } for="frontend" blocks={ props.blocks } on-save={ onPlacement } position={ get('item.id') || 'page' } />

  </div>

  <script>
    // import base
    import Base from '../../js/base';

    // export default
    export default class PageAdminUpdatePage extends Base {
      /**
       * on before mount
       */
      onBeforeMount(props, state) {
        // run super
        super.onBeforeMount(...arguments);

        // set variables
        this.type = props.type;
        this.page = this.eden.get('model.get')('page', props.item.id, props.item);
      
        // set to placements
        if (this.page.id) this.eden.set('placements.' + this.page.id, this.page.get('placement'));
      }
      

      /**
      * set placement
      *
      * @param  {Placement} placement
      */
      async onPlacement (placement) {
        // check id
        if (placement.get('id') !== (this.page.get('placement') || {}).id) {
          // update placement
          this.page.set('placement', placement.get());

          // save
          await this.savePage(this.page);
        }
      }

      /**
      * on preview
      *
      * @param  {Event} e
      */
      onInput (e) {
        // save page
        this.savePage(this.page);
      }

      /**
      * on language
      *
      * @param  {Event} e
      */
      onLanguage (e) {
        // set language
        this.language = e.target.getAttribute('data-lng');

        // update view
        this.update();
      }

      /**
      * set slug
      *
      * @param  {Event} e
      */
      onSlug (e) {
        
      }

      /**
      * saves page
      *
      * @param  {Object}  page
      *
      * @return {Promise}
      */
      async savePage (page) {
        // set loading
        this.loading('save', true);

        // update view
        this.update();

        // check type
        if (!page.type) page.set('type', props.type);

        // set input values
        jQuery('[data-input]', this.refs.form).each((i, elem) => {
          // set value
          page.set(jQuery(elem).attr('data-input'), jQuery(elem).val());
        });

        // log data
        let res = await fetch('/admin/page/' + (page.get('id') ? page.get('id') + '/update' : 'create'), {
          'body'    : JSON.stringify(this.page.get()),
          'method'  : 'post',
          'headers' : {
            'Content-Type' : 'application/json'
          },
          'credentials' : 'same-origin'
        });

        // load data
        let data = await res.json();
        
        // check if new page
        if (!page.get('id') && data.result.id) {
          // change url
          let state = Object.assign({}, {
            'prevent' : true
          }, eden.router.history.location.state);
          
          // replace state
          eden.router.history.replace({
            'state'    : state,
            'pathname' : '/admin/page/' + data.result.id + '/update'
          });
        }

        // set logic
        for (let key in data.result) {
          // clone to page
          page.set(key, data.result[key]);
        }

        // set loading
        this.loading('save', false);

        // update view
        this.update();
      }
    }
  </script>
</page-admin-update-page>
